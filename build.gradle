import de.undercouch.gradle.tasks.download.Download

buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven {
			name 'forge'
			url 'http://files.minecraftforge.net/maven'
		}
		maven {
			name 'sonatype'
			url 'https://oss.sonatype.org/content/repositories/snapshots/'
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
		classpath 'de.undercouch:gradle-download-task:1.2'
	}
}

apply plugin: 'de.undercouch.download'

task getDependenciesManually(type: Download) {
	src([ // download all of the dependencies that are not on maven
	'http://ae-mod.info/builds/appliedenergistics2-rv2-stable-1-dev.jar',
	'http://addons-origin.cursecdn.com/files/2234/199/CoFHCore-[1.7.10]3.0.2-262-dev.jar',
	'http://addons-origin.cursecdn.com/files/2233/781/ThermalFoundation-[1.7.10]1.0.0-81-dev.jar',
	'http://addons-origin.cursecdn.com/files/2233/797/ThermalExpansion-[1.7.10]4.0.0-176-dev.jar'
	])
	dest 'lib'
}

task setupWorkspace(type: Download) {
	getDependenciesManually.execute()

	def destination = new File(System.getProperty('user.dir'), 'forge.zip')

	src 'http://files.minecraftforge.net/maven/net/minecraftforge/forge/' + forge_version + '/forge-' + forge_version + '-src.zip'
	dest destination

	doLast {
		project.copy {
			from zipTree(destination)
			into 'forge'
		}

		// move the eclipse metadata into the workspace
		project.file('forge/eclipse').renameTo(project.file('eclipse'))

		// delete all of the excess stuff
		project.file('forge').deleteDir()
		project.file('forge.zip').delete()
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = gradle_version
}

apply plugin: 'curseforge'
apply plugin: 'forge'

// get all of the versions off of the changelog
def versions = file('info/changelog.md').text =~ /(## Version )(.*)/

// get the version at the top of the changelog
def latestVersion = versions[0][2]

version = latestVersion
group = 'T145.magistics'
archivesBaseName = 'Magistics'

minecraft {
	version = forge_version
	runDir = 'eclipse'
}

repositories {
	mavenCentral()
	maven {
		name 'ChickenBones'
		url 'http://chickenbones.net/maven'
	}
	maven {
		name 'IC2'
		url 'http://maven.ic2.player.to/'
	}
	maven {
		name 'ProfMobius'
		url 'http://mobiusstrip.eu/maven'
	}
}

dependencies {
    // Buildcraft
    compile 'com.mod-buildcraft:buildcraft:6.4.15:dev'

    // Equivalent Exchange 3
    compile 'com.pahimar.ee3:EquivalentExchange3:' + project.minecraft.version + '-0.3.505:dev'

    // Iron Chests
    compile 'cpw.mods:ironchest:' + project.minecraft.version + '-6.0.62.742:deobf'

    // for Thaumcraft and other mods to "manually" compile
    compile fileTree(dir: 'lib', include: '*.jar')
}

def title = project.minecraft.version + '-' + project.version

// rename the default obfuscated jar
jar {
	version title
}

// add a developer release
task deobfJar(type: Jar) {
	from sourceSets.main.output
	classifier 'dev'
	version title
}

// add an API release for developers
task apiZip(type: Zip) {
	from (sourceSets.main.java) {
		include 'T145/magistics/api/**'
	}
	classifier 'api'
	version title
}

apiZip.mustRunAfter(deobfJar)

// add a javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
	from 'build/docs/javadoc'
	classifier 'javadoc'
	version title
}

// add a source backup for the project
task sourceJar(type: Jar) {
	from sourceSets.main.allJava
	classifier 'src'
	version title
}

artifacts {
	archives deobfJar, apiZip, sourceJar//, javadocJar
}