package T145.magistics.common;

import net.minecraft.util.EnumChatFormatting;
import net.minecraftforge.common.config.Configuration;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import cpw.mods.fml.client.event.ConfigChangedEvent.OnConfigChangedEvent;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.Metadata;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.event.FMLServerStartingEvent;
import cpw.mods.fml.common.eventhandler.SubscribeEvent;
import cpw.mods.fml.common.network.NetworkRegistry;

@Mod(modid = Magistics.modid, name = Magistics.modid, version = Magistics.version, guiFactory = "T145.magistics.client.GuiFactory", dependencies = "after:Thaumcraft", useMetadata = false)
public class Magistics {
	public static final String modid = "Magistics", version = "8.0.0";

	@Instance(modid)
	private Magistics instance;

	public Magistics getInstance() {
		return instance;
	}

	@Metadata
	public static ModMetadata meta;

	@SidedProxy(clientSide = "T145.magistics.client.ClientProxy", serverSide = "T145.magistics.common.CommonProxy")
	public static CommonProxy proxy;

	public static Configuration config;
	public static Logger logger = LogManager.getLogger(modid);

	public static boolean debug;

	public void syncConfiguration() {
		debug = config.getBoolean("Debug", config.CATEGORY_GENERAL, true, "Toggles advanced log output.");
	}

	@EventHandler
	public void preInit(FMLPreInitializationEvent e) {
		meta.autogenerated = false;
		try {
			config = new Configuration(e.getSuggestedConfigurationFile());
			config.load();
			syncConfiguration();
			config.save();
		} catch (Exception err) {
			logger.error("An error has occurred while loading configuration properties!", err);
		} finally {
			if (config != null)
				config.save();
		}
		proxy.registerHandlers(instance);
	}

	@SubscribeEvent
	public void onConfigChanged(OnConfigChangedEvent e) {
		if (e.modID.equals(modid)) {
			syncConfiguration();

			if (config != null && config.hasChanged())
				config.save();
		}
	}

	@EventHandler // registry registering & FMLInterComms
	public void init(FMLInitializationEvent e) {
		meta.modId = modid;
		meta.name = EnumChatFormatting.AQUA + modid;
		meta.description = "Adding some logistics to Thaumcraft!";
		meta.version = version;
		meta.url = "https://github.com/T145/magistics";
		meta.updateUrl = "https://github.com/T145/magistics/releases";
		meta.authorList.add(EnumChatFormatting.GOLD + "T145");
		meta.credits = "Azanor, for making Thaumcraft, and all of Magistics' contributors!";
		meta.logoFile = "logo.png";

		NetworkRegistry.INSTANCE.registerGuiHandler(instance, proxy);
	}

	@EventHandler // renderers, recipes, & TC stuff
	public void postInit(FMLPostInitializationEvent e) {
	}

	@EventHandler // register commands here
	public void serverInit(FMLServerStartingEvent e) {
	}
}